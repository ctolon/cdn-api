package main

import (
	// "flag"

	_ "github.com/ctolon/cdn-api/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/ctolon/cdn-api/internal/app/providers"
	"github.com/ctolon/cdn-api/internal/app/service"
	"github.com/ctolon/cdn-api/internal/config"
	"github.com/ctolon/cdn-api/internal/logger"
	"github.com/ctolon/cdn-api/internal/server"

	"github.com/minio/minio-go/v7"
	"github.com/minio/minio-go/v7/pkg/credentials"
)

// @title Swagger Example API
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host petstore.swagger.io
// @BasePath /v2
func main() {

	// Load configuration
	configProvider := providers.NewConfigProvider(providers.LOCAL, "", providers.DOTENV, "", "")
	//config.LoadConfigIntoApp(configProvider)
	cfg := config.LoadConfigIntoStruct(configProvider)

	// Initialize logger
	log := logger.NewLoggerAdapter(logger.ZerologLogger, nil)

	//logger.Info("D", adapters.LogFields{"key": config.AppConfig.MinioAccessKey})

	minioOpts := &minio.Options{
		Creds:  credentials.NewStaticV4(cfg.MinioAccessKey, cfg.MinioSecretKey, ""),
		Secure: false,
	}
	minioService, err := service.NewMinioService(cfg.MinioEndpoint, minioOpts, log)
	if err != nil {
		log.Error("Error creating Minio service", err, nil)
	}
	log.Debug("", logger.LogFields{"minioService": minioService})

	log.Info("Starting server", nil)
	server.NewServer(log, cfg, minioService)
}
